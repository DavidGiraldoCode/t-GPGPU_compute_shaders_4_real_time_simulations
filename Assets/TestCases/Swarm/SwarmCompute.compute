// Define the kernel that is going to be excecuted in the GPU
#pragma kernel LineUpObjects
#pragma kernel Swarm

//Include a utility for randomness Ronja (2020) https://github.com/ronja-tutorials/ShaderTutorials/blob/master/Assets/050_Compute_Shader/Random.cginc
#include "Random.cginc"

//Define the necesary data for th computation
RWStructuredBuffer<float3> PositionsBF;

// Specify the number of thread on each thread group
[numthreads(64,1,1)]
void LineUpObjects (uint3 id : SV_DispatchThreadID)
{
    PositionsBF[id.x] = float3 (id.x, 0, 0);
}


//variables
RWStructuredBuffer<float3> Result;
uniform float Time;

[numthreads(64,1,1)]
void Swarm (uint3 id : SV_DispatchThreadID)
{
    //generate 2 orthogonal vectors
    float3 baseDir = normalize(rand1dTo3d(id.x) - 0.5) * (rand1dTo1d(id.x)*0.9+0.1);
    float3 orthogonal = normalize(cross(baseDir, rand1dTo3d(id.x + 7.1393) - 0.5)) * (rand1dTo1d(id.x+3.7443)*0.9+0.1);
    //scale the time and give it a random offset
    float scaledTime = Time * 2 + rand1dTo1d(id.x) * 712.131234;
    //calculate a vector based on vectors
    float3 dir = baseDir * sin(scaledTime) + orthogonal * cos(scaledTime);
    Result[id.x] = dir * 20;
}
